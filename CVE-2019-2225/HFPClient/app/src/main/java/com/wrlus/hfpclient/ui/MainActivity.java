package com.wrlus.hfpclient.ui;

import androidx.appcompat.app.AlertDialog;
import androidx.appcompat.app.AppCompatActivity;

import android.bluetooth.BluetoothDevice;
import android.content.DialogInterface;
import android.content.Intent;
import android.os.Bundle;
import android.provider.Settings;
import android.view.View;
import android.widget.Button;
import android.widget.TextView;

import java.util.ArrayList;
import java.util.List;

import com.wrlus.hfpclient.bt.HfpManager;
import cn.wrlu.bluetoothat.R;

public class MainActivity extends AppCompatActivity {

    private Button btnBtSettings, btnBtBondedDevices, btnConnect, btnManageCall, btnCleanLog;
    private TextView tvLog;
    private HfpManager hfpManager;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
        initUi();
        hfpManager = HfpManager.getInstance(MainActivity.this);
        if (hfpManager.isHfpEnable()) {
            tvLog.setText(tvLog.getText() + "\n" + "已连接Handset Free Profile");
        } else {
            tvLog.setText(tvLog.getText() + "\n" + "连接Handset Free Profile失败");
        }
    }

    protected void initUi() {
        btnBtSettings = findViewById(R.id.btnBtSettings);
        btnBtBondedDevices = findViewById(R.id.btnBtBondedDevices);
        btnConnect = findViewById(R.id.btnConnect);
        btnManageCall = findViewById(R.id.btnManageCall);
        btnCleanLog = findViewById(R.id.btnCleanLog);
        tvLog = findViewById(R.id.tvLog);
        btnBtSettings.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                startActivity(new Intent(Settings.ACTION_BLUETOOTH_SETTINGS));
            }
        });
        btnBtBondedDevices.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                final BluetoothDevice[] bondedDevices = hfpManager.getBondedDevices().toArray(new BluetoothDevice[0]);
                final List<String> deviceStrings = new ArrayList<>();
                for (BluetoothDevice device : bondedDevices) {
                    deviceStrings.add(device.getName() + " - " + device.getAddress());
                }
                AlertDialog.Builder dialog = new AlertDialog.Builder(MainActivity.this);
                dialog.setTitle("选择一个已配对设备");
                dialog.setItems(deviceStrings.toArray(new String[0]), new DialogInterface.OnClickListener() {
                    @Override
                    public void onClick(DialogInterface dialog, int which) {
                        hfpManager.setBtDevice(bondedDevices[which]);
                        tvLog.setText(tvLog.getText() + "\n" + "已选择设备："+deviceStrings.get(which));
                    }
                });
                dialog.show();
            }
        });
        btnConnect.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                if (hfpManager.connect()) {
                    tvLog.setText(tvLog.getText() + "\n" + "已连接设备："+hfpManager.getBtDevice().getName());
                } else {
                    tvLog.setText(tvLog.getText() + "\n" + "连接设备失败");
                }
            }
        });
        btnManageCall.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                String[] action = {"接听来电", "拒绝来电"};
                AlertDialog.Builder dialog = new AlertDialog.Builder(MainActivity.this);
                dialog.setTitle("管理通话");
                dialog.setItems(action, new DialogInterface.OnClickListener() {
                    @Override
                    public void onClick(DialogInterface dialog, int which) {
                        boolean result = false;
                        switch (which) {
                            case 0:
                                result = hfpManager.acceptCall();
                                break;
                            case 1:
                                result = hfpManager.rejectCall();
                                break;
                        }
                        if (result) {
                            tvLog.setText(tvLog.getText() + "\n" + "操作成功完成");
                        } else {
                            tvLog.setText(tvLog.getText() + "\n" + "操作失败");
                        }
                    }
                });
                dialog.show();
            }
        });
        btnCleanLog.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                tvLog.setText("日志");
            }
        });
        AlertDialog.Builder dialog = new AlertDialog.Builder(this);
        dialog.setTitle("提示");
        dialog.setMessage("本程序需要编译Android以启用HFPClient功能，具体可参考：\nhttps://wrlu.cn/cyber-security/mobile-security/aosp-hfpclient/");
        dialog.setNegativeButton("关闭", new DialogInterface.OnClickListener() {
            @Override
            public void onClick(DialogInterface dialog, int which) {

            }
        });
        dialog.show();
    }
}
